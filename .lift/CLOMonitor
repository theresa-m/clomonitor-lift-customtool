#!/usr/bin/env bash
dir=$1
commit=$2
cmd=$3

IFS=' ' # space delimiter

function version() {
    echo 1
}

# always applicable since this is a custom plugin
function applicable() {
    echo "true"
}

function run() {
  firstResult=1

  # TODO clomonitor only accepts https urls, not ssh. Needs to include "https://" explicitly. Which does Lift use?
  projectUrlFull=$(echo $(cd $dir && git remote get-url origin))
  projectUrl=${projectUrlFull::-4}
  jsonData=$(/root/.cargo/bin/clomonitor-linter  --format=json --path $dir --url $projectUrl)
  reportData=$(echo $jsonData | jq ".report")
  reportKeys=$(echo $reportData | jq "keys[]") # list of keys seperated by spaces

  echo "["
     while read -ra reportKey ; do #reportKeys as input
      testTypeData=$(echo $reportData | jq "."$reportKey)
      testTypeKeys=$(echo $testTypeData | jq "keys[]") # list of keys seperated by spaces
      readableTestTypeKey=$(echo $reportKey | tr '_"' ' ') # remove underscores and quotes to make this human readable

      while read -ra testKey ; do # testTypeKeys as input
            testData=$(echo $testTypeData | jq "."$testKey)
            readableTestKey=$(echo $testKey | tr '_"' ' ') # remove underscores and quotes to make this human readable

            if [ "$(echo $testData | jq ".passed")" = "false" ]; then
                # add commas between json objects
                if [ $firstResult -eq 1 ]; then
                    firstResult=0
                else
                    echo ","
                fi

                testDetails=$(echo $testData | jq ".details")
                if [[ $testDetails = null ]]; then
                  messageDetails=""
                else
                  messageDetails="\n\n##$( echo $testDetails | tr -d '"') "
                fi
                message="\"##Test name: $readableTestKey $messageDetails\""

                echo "{ \"type\": \"CLO Monitor: $readableTestTypeKey\", \
                    \"message\": $message, \
                    \"file\": \"NA\", \
                    \"line\":0, \
                    \"details_url\": \"https://clomonitor.io/docs/topics/checks/\" \
                  }"
            fi
      done < <(echo $testTypeKeys)
    done < <(echo $reportKeys)

  echo "]"
}

# Pre installed in container: apt update && apt install -y curl jq git
function installTool() {
  # install latest cargo
  apt-get -y install gcc make &>> output.txt
  curl https://sh.rustup.rs -sSf | sh -s -- -y &>> output.txt

  # install clomonitor-linter
  $HOME/.cargo/bin/cargo install --git https://github.com/cncf/clomonitor clomonitor-linter &>> output.txt

  # install scorecard (used by clomonitor-linter for some tests)
  curl -LO https://github.com/ossf/scorecard/releases/download/v4.4.0/scorecard_4.4.0_linux_arm64.tar.gz &>> output.txt
  tar xzf scorecard_4.4.0_linux_arm64.tar.gz &>> output.txt
  mv scorecard-linux-arm64 scorecard &>> output.txt
  export PATH=$(pwd):$PATH

  # TODO github authentication
}

if [[ "$cmd" = "run" ]] ; then
    #installTool
    run
fi
if [[ "$cmd" = "applicable" ]] ; then
    applicable
fi
if [[ "$cmd" = "version" ]] ; then
    version
fi
if [[ "$cmd" = "setup" ]] ; then
    installTool
fi
if [[ "$cmd" = "test-run" ]] ; then
    export PATH=$(pwd):$PATH
    run
fi